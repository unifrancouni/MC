<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhEAAQAPYAAP////gzAfMwAeMjAuspAtA3GcsfCcyLh/ktAN4tDeHWzOPU0fLm4dShmOPMxOgl
        Adx5ae5sSM1sYct3ds5iU/pJBOtWJPVKA+JDCe9SD/dkAMJORs1fU/14Cv1jAfRqE/qQAOm7se3IudO6
        uOC6s/DAtODd1+jj4t3LyODIyNOutOGLcu6LcPufBdSRfsqIg9Wrqd+vpcmRi8icmN1PLMcnF8kpFLpw
        bbx7fcY0Gso/LOYnAdEiCNkwEbtpab0iFK8kIb0bCLUiE64xK7xBP7lYVLouJ65BO/MtBPUyBfM7AM9N
        PspIO+UnCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAE4ALAAAAAAQABAAAAeEgE6C
        g4SFhoeGDCwRIYMKEhwOhSUdLRYxTgpLBAQThSIfIBo0DRQEAQkvhQwrGR4XOQkBAxsLhicQGBVKAU1E
        KYgoOgIBAUIziE4uPQHEPEUmhw0FCAJBAwgGPoYOBQJJNThHDwIGMoUkA0g2B04jRjsPN4ULTD/tgjBD
        QCrJ/v8AkwUCADs=
</value>
  </data>
  <data name="CmdAceptar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhEAAQAPcAAP/7/4yKjIySjJyenISOe97T3mOaY8bDxpSSlJSqlIymjJySnHvje2uma3uChJSS
        jISChL3Dvb2+xr26vbXXtff7/87LxsayxqWypaWipZyqlK2yrbW6tbW2vbWqtXt1e2tla5zDnJTHlJzL
        lGNVY4TThFJBUpTDlEp9Qr3HvUpJUrXbvVo8Spz7nITrhJzPpZT/lJTvnK2inKWWpaWqpXNte5yunJyq
        nKWenJyqpa2qtb22rbWyrWNdY7Wyta2+rWthc2tlY7WitaX/pefb3t7r5+fr5+fj3t7n797b5xh9GM7r
        xsbnzv/z9xhpGAhtCP/z//f/9+f35+/r7/fr9+/z78bDvSl5KcbHxiFtGM6uxq3/raX7rbXjta3/tdbP
        3tbL1t7X1tbb3s7Pzhh1IcbDzs7Lzs7PxnN5c1LjSlrLY2Pbc2PbWlLPUmumc0KKSkrfQkrLSoR5hEKO
        OTGCQox9hHvze2vnY3PPa0qyOXvva2OuY1KmSkKmQlqiWlKiUlqaY1KOUkqKSlqCWlKKWmuWY0qOQnOK
        e2uaa2OGWlK6WlqqWlq6WlqyWjGaMZyOnJSalDmeKZSOjISSnJyOlJSOlIS2hIyijHt1c4yylHtlhCGa
        KZSWpZyOpYyahISme4yKhDGiKTmeOYSahIyGjISOjISKhDmSOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH5BAEAAKgALAAAAAAQABAAAAj/AFEJFCghA4FDM7QMXIiqAwIHpgR0IkCA0gSGEQQEGMDhDJgJGgoF
        CjEwAoRKCzwQAQCgyidGDNxgEBggQAYEHgpAASCiUQwvixIVuPAhR4JRGw4UGOGnxZA9DTwteCQgkwED
        iBTYiFSCiyJDGISgCfCjAR88cwwMygNDzZsEKXxoAqXB0p8tLkQp0bOGziUZFiQAqbOBAqBTDOy0YdOH
        0A0eYQ70uCCnCBNBju7AiZNFAQcxU3CQQgWiA4AVV0Kl2YTCSpIKZjBZQEWjRpkKL5w8IbOkCQAkpSQN
        HPDhgBQKJ7pEofLFASSGD4JAGGPkCBZOIAYwFLjjAQkTLFRMBNKxMCAAOw==
</value>
  </data>
  <metadata name="HelpProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iAC3jo8Au4yMALKWlgC0mJcAspeYAIumjwCQppkAgbeWAKWnqQCtqqoAtKioALGprQCzrq4At62uALev
        sQDFmpoAyZ6eAMampwDNrq4A0ampANOtrQDDsrIAz7S0ANq1tQDSu7sA17m6ANG8uwDQvL4A1L+/AL7g
        lQC/5KQAxtu0AMXkrwDMscQA2cLCANzBwADcwcUA3s3NANjWxQDZ2sgA0cHcAOLIyQDkyckA4czLAOXO
        zgDk0M0A4M3YAOTS0gDj19cA5tXVAOnV1QDm2NcA6djZAOzd3ADa7cQA3+vaAOfg3wDq6dwA4fHWAOPw
        2QDOxusA2tjhAMXC9QDb1vIA8uLmAPbv8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVFQkn
        FgICPgAAAAAAFwEJEAsSKStAJxgCBRYRCQkJCQsKCiwsGBgsKRgJCQoKChMTGxsbGywsLCwRCQkaGxsb
        GxsbGCgsGhssEQkQGxAQJz4VAQMyBwEvAAAAAAACATdEAgECMi8DAAAAAAAAMgEvNwMBATIuAQAAAAAA
        ADcBLzIBAkR1QQYAAAAAAAA2AS82AwE2NjYzAAAAAAAAQS9hVDMyAAAAAAAAAAAAAAA2PjYzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/AMAAOAAAAAAAAAAAAAAAAAA
        AAAAAwAA4AcAAOAHAADgBwAA4AcAAOB/AADw/wAA//8AAP//AAA=
</value>
  </data>
</root>
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics.Win.Misc.v3</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Win.Misc.UltraButton">
            <summary>
            Represents a standard windows button control.
            </summary>
            <remarks>
            <p class="body">The <b>UltraButton</b> is a standard windows button control and may be clicked using the mouse or keyboard (using the SPACE or 
            ENTER keys).</p>
            <p class="body">Set the <b>AcceptButton</b> or <b>CancelButton</b> property of a <b>Form</b> to the button to allow the 
            click event to be invoked using the ENTER or ESC keys respectively even if the button does not have focus.</p>
            <p class="body">When the form containing the UltraButton is displayed using the form's <b>ShowDialog</b> method, the 
            <see cref="T:System.Windows.Forms.DialogResult"/> property of the button may be used to specify the return value of the <b>ShowDialog</b> method.</p>
            <p class="body">The UltraButton has much of the same functionality as the inbox Button control with some additional features including the 
            ability to fire the click event repeatedly while the button is pressed (<see cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeat"/>) and the ability to be displayed with non-rectangular shapes (<see cref="P:Infragistics.Win.Misc.UltraButton.ShapeImage"/>). 
            The default appearance of the button can be modified using the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> property. The <see cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/> can 
            be used to adjust the appearance of the button when the mouse is positioned over the button when <see cref="P:Infragistics.Win.Misc.ControlBase.HotTracking"/> is set to <b>true</b>. 
            The <see cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/> affects the appearance of the button when the button is pressed.</p>
            <p class="note"><b>Note</b> If the control that has focus accepts and processes the ENTER or ESC key, the UltraButton will not 
            process it.</p>
            <p class="note"><b>Note</b> If the operating system supports themes and <see cref="P:Infragistics.Win.UltraControlBase.SupportThemes"/> is true, the appearance of 
            the control will be rendered using those these and will not use the colors specified in the associated appearance properties.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.Misc.UltraButtonBase">
            <summary>
            Implements the basic functionality common to button controls.
            </summary>
            <remarks>
            <p class="body">This class implements the basic functionality for an autosize button control.</p>
            <p class="body">Set the <b>AcceptButton</b> or <b>CancelButton</b> property of a <b>Form</b> to the button to allow the 
            click event to be invoked using the ENTER or ESC keys respectively even if the button does not have focus.</p>
            <p class="body">When the form containing the button is displayed using the form's <b>ShowDialog</b> method, the 
            <see cref="P:Infragistics.Win.Misc.UltraButtonBase.DialogResult"/> property of the button may be used to specify the return value of the <b>ShowDialog</b> method.</p>
            <p class="body">The class includes a number of properties to determine the appearance of the button. For example, the <see cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/> 
            determines the appearance (color, image, etc.) when the button has been pressed. The <see cref="P:Infragistics.Win.Misc.UltraButtonBase.ButtonStyle"/> property is used to determine the border 
            style for the button. The <see cref="P:Infragistics.Win.Misc.UltraButtonBase.ShowFocusRect"/> is used to prevent the focus rectangle from being rendered when the control has focus. The 
            <see cref="P:Infragistics.Win.Misc.UltraButtonBase.ShowOutline"/> property determines whether the button will be rendered with an additional border when it is the default button (<see cref="P:Infragistics.Win.Misc.UltraButtonBase.IsDefault"/>).</p>
            <p class="body">The class also includes properties to affect the behavior of the control. For example, the <see cref="P:Infragistics.Win.Misc.UltraButtonBase.AcceptsFocus"/> button 
            determines whether the button will receive focus when it is clicked.</p>
            <p class="note"><b>Note</b> When a button or other control does not receive focus, regardless of the <b>CausesValidation</b> property, 
            the control with focus will not have its Validating/Validated events fired. These events are controlled and invoked by the base .Net control 
            classes and are not invoked until the control loses focus, the container's Validate method is invoked, etc.</p>
            </remarks>
            <seealso cref="T:Infragistics.Win.Misc.UltraButton"/>
            <seealso cref="T:Infragistics.Win.Misc.UltraDropDownButton"/>
        </member>
        <member name="T:Infragistics.Win.Misc.AutoSizeControlBase">
            <summary>
            Abstract base control class for controls that automatically size based on their contents.
            </summary>
            <remarks>
            <p class="body">The <b>AutoSizeControlBase</b> class is an abstract base class for a control that 
            will size based on its contents, which is usually the image and text. The <see cref="P:Infragistics.Win.Misc.AutoSizeControlBase.AutoSize"/> 
            property will determine if autosizing is enabled. When set to true, the control will be sized 
            based on the <see cref="P:Infragistics.Win.Misc.AutoSizeControlBase.PreferredSize"/>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.Misc.ControlBase">
            <summary>
            Abstract base control class
            </summary>
            <remarks>
            <p class="body">The <b>ControlBase</b> class is an abstract base control class for a basic ultracontrol 
            that supports displaying image and text. The class exposes some common appearance properties as well as 
            some properties that control the display of the text.</p>
            </remarks>
            <seealso cref="T:Infragistics.Win.Misc.UltraLabel"/>
            <seealso cref="T:Infragistics.Win.Misc.UltraButton"/>
            <seealso cref="T:Infragistics.Win.Misc.UltraDropDownButton"/>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ShouldSerializeAppearances">
            <summary>
            Determines if the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearances"/> collection needs to be serialized.
            </summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.Appearances"/>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ResetAppearances">
            <summary>
            Clears the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearances"/> collection
            </summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.Appearances"/>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ShouldSerializeAppearance">
            <summary>
            Indicates whether the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> property contains data that needs to be serialized.
            </summary>
            <returns>Returns true if the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> property needs to be serialized.</returns>
            <remarks>
            <p class="body">Use this method to determine if an <b>Appearance</b> object has been created and contains data that needs to be serialized.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/>
            <seealso cref="T:Infragistics.Win.AppearanceBase"/>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ResetAppearance">
            <summary>
            Resets the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> property to its default value.
            </summary>
            <remarks>
            <p class="body">Use this method to reset the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> property. If the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> property was set to an Appearance from the <b>Appearances</b> collection, the properties on the <see cref="T:Infragistics.Win.AppearanceBase"/> object in the collection will remain the same but the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> property will no longer be attached to that <see cref="T:Infragistics.Win.AppearanceBase"/>. To reset the properties of the associated <b>Appearance</b> object, the <see cref="M:Infragistics.Win.Appearance.Reset"/> method of the <b>Appearance</b> object itself should be invoked instead.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/>
            <seealso cref="T:Infragistics.Win.AppearanceBase"/>
            <seealso cref="M:Infragistics.Win.AppearanceBase.Reset"/>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ShouldSerializeHotTrackAppearance">
            <summary>
            Indicates whether the <see cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/> property contains data that needs to be serialized.
            </summary>
            <returns>Returns true if the <see cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/> property needs to be serialized.</returns>
            <remarks>
            <p class="body">Use this method to determine if an <b>Appearance</b> object has been created and contains data that needs to be serialized.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/>
            <seealso cref="T:Infragistics.Win.AppearanceBase"/>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ResetHotTrackAppearance">
            <summary>
            Resets the <see cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/> property to its default value.
            </summary>
            <remarks>
            <p class="body">Use this method to reset the <see cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/> property. If the <see cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/> property was set to an Appearance from the <b>Appearances</b> collection, the properties on the <see cref="T:Infragistics.Win.AppearanceBase"/> object in the collection will remain the same but the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> property will no longer be attached to that <see cref="T:Infragistics.Win.AppearanceBase"/>. To reset the properties of the associated <b>Appearance</b> object, the <see cref="M:Infragistics.Win.Appearance.Reset"/> method of the <b>Appearance</b> object itself should be invoked instead.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/>
            <seealso cref="T:Infragistics.Win.AppearanceBase"/>
            <seealso cref="M:Infragistics.Win.AppearanceBase.Reset"/>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ShouldSerializeImageSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.Misc.ControlBase.ImageSize"/> property needs to be serialized
            </summary>
            <returns>True if the property differs from the default value</returns>
            <seealso cref="P:Infragistics.Win.Misc.ControlBase.ImageSize"/>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ResetImageSize">
            <summary>
            Resets the value of the <see cref="P:Infragistics.Win.Misc.ControlBase.ImageSize"/> property to its default value
            </summary>
            <seealso cref="P:Infragistics.Win.Misc.ControlBase.ImageSize"/>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ShouldSerializeImageTransparentColor">
            <summary>
            <p class="body">Returns a Boolean value that determines whether the <see cref="P:Infragistics.Win.Misc.ControlBase.ImageTransparentColor"/> property is set to its default value.</p>
            </summary>
            <remarks>
            <p class="body">Returns True if the <see cref="P:Infragistics.Win.Misc.ControlBase.ImageTransparentColor"/> property is not set to its default value; otherwise, it returns False.</p>
            <p class="body">Invoke the <see cref="M:Infragistics.Win.Misc.ControlBase.ResetImageTransparentColor"/> method to reset this property to its default value.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ResetImageTransparentColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.Misc.ControlBase.ImageTransparentColor"/> property to its default value.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset the <see cref="P:Infragistics.Win.Misc.ControlBase.ImageTransparentColor"/> property to its default value.</p>
            <p class="body">Once this method is invoked, the <see cref="M:Infragistics.Win.Misc.ControlBase.ShouldSerializeImageTransparentColor"/> method will return False until the <see cref="P:Infragistics.Win.Misc.ControlBase.ImageTransparentColor"/> property is set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ResetPadding">
            <summary>
            Resets the <see cref="P:Infragistics.Win.Misc.ControlBase.Padding"/> property to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ShouldSerializePadding">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.Misc.ControlBase.Padding"/> property should be serialized.
            </summary>
            <returns>True if the <see cref="P:Infragistics.Win.Misc.ControlBase.Padding"/> property value differs from the default value</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.OnSubObjectPropChange(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Invoked when a property on a subobject has changed.
            </summary>
            <param name="propChangeInfo">Information about the property change</param>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Resolves the appearance for the control
            </summary>
            <param name="appearance">Appearance structure to update</param>
            <param name="requestedProps">Appearance properties to resolve</param>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.OnTextChanged(System.EventArgs)">
            <summary>
            Invoked when the text of the control changes
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.GetImageColorMapTable(System.Object)">
            <summary>
            Returns the color map used to remap colors in the images
            </summary>
            <param name="appearanceImage">Image property returned from the resolved Appearance data</param>
            <returns>A color map array of colors to remap or null</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.OnMouseEnter(System.EventArgs)">
            <summary>
            Invoked when the mouse enters the bounds of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.OnMouseLeave(System.EventArgs)">
            <summary>
            Invoked when the mouse leaves the bounds of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.Misc.ControlBase.Dispose(System.Boolean)">
            <summary>
            Handles disposing the control's resources.
            </summary>
            <param name="disposing">Boolean indicating if managed and unmanaged resources should be released.</param>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.BackgroundImage">
            <summary>
            Overriden. The <b>BackgroundImage</b> property does not affect the control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.ForeColor">
            <summary>
            Overiden. The <b>ForeColor</b> for the control does not affect the control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.SubObjectPropChangeHandler">
            <summary>
            Event handler for the SubObjectPropChange event of <see cref="T:Infragistics.Shared.SubObjectBase"/> derived objects
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.ImageList">
            <summary>
            Gets/sets the associated imagelist control.
            </summary>
            <remarks>
            <p class="body">The <b>ImageList</b> is used to obtain the images to be displayed 
            by the control when the Image property of the Appearance objects is set to an numeric value.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.Appearances">
            <summary>
            Returns a collection of user created Appearance objects.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.Appearance">
            <summary>
            Gets/sets the default appearance for the control.
            </summary>
            <seealso cref="M:Infragistics.Win.Misc.ControlBase.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)"/>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.HasAppearance">
            <summary>
            Indicates whether an <see cref="T:Infragistics.Win.AppearanceBase"/> object has been created.
            </summary>
            <value>Returns true when the <b>Appearance</b> object for the <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> property has been created.</value>
            <remarks>
            <p class="body">Use this property to determine if an <see cref="T:Infragistics.Win.AppearanceBase"/> object has been created.  Appearance objects in general are not created until the properties associated with them are accessed.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/>
            <seealso cref="T:Infragistics.Win.AppearanceBase"/>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance">
            <summary>
            Gets/sets the appearance for the control when the mouse is over the client area of the control
            </summary>
            <seealso cref="M:Infragistics.Win.Misc.ControlBase.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)"/>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.HasHotTrackAppearance">
            <summary>
            Indicates whether an <see cref="T:Infragistics.Win.AppearanceBase"/> object has been created.
            </summary>
            <value>Returns true when the <b>Appearance</b> object for the <see cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/> property has been created.</value>
            <remarks>
            <p class="body">Use this property to determine if an <see cref="T:Infragistics.Win.AppearanceBase"/> object has been created.  Appearance objects in general are not created until the properties associated with them are accessed.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/>
            <seealso cref="T:Infragistics.Win.AppearanceBase"/>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.HotTracking">
            <summary>
            Gets/sets if the hot track appearance is used when the mouse is over the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.WrapText">
            <summary>
            Gets/sets if the text is wrapped when there is not enough room to display the text.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.ImageSize">
            <summary>
            Gets/sets the size of the image displayed by the control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.HotkeyStyle">
            <summary>
            Indicates how mnemonics are displayed by the control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.ImageTransparentColor">
            <summary>
            Gets/sets the color displayed as transparent in a image.
            </summary>
            <remarks>
            <p class="body">When set to a color other than Color.Transparent (the default), all 
            occurrences of the color in the image will be made transparent.</p>
            <p class="body">If an image is supplied by setting an Appearance.Image property
            to an Imagelist index, the ImageLists TransparentColor property is 
            looked at first.  If that property is set to Color.TransparentColor,
            then the component's ImageTransparentColor is used.  If it is set 
            to Color.TransparentColor, then no color masking is done.</p>
            <p class="body">If an image is supplied by setting the Appearance.Image property to
            an image, the component's ImageTransparentColor is used.  If it is
            set to Color.TransparentColor, then no color masking is done.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.UseMnemonic">
            <summary>
            Gets/sets whether mnemonics are displayed and processed.
            </summary>
            <remarks>
            <p class="body">When <b>UseMnemonic</b> is set to <b>true</b>, which is the default value, 
            a character preceeded by a single ampersand will be displayed with an underline beneath it. That character 
            is treated as an access key so that pressing ALT + the mnemonic character will cause the control to 
            take an action. In the case, of a label, focus is forwarded to the next control.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.Padding">
            <summary>
            Gets/sets the amount of space between the contents (image and text) and borders.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.IsOverHotTrackArea">
            <summary>
            Indicates if the mouse is over a hot track area of the control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.ControlBase.Infragistics#Win#IImageListProvider#ImageList">
            <summary>
            Returns the <see cref="P:Infragistics.Win.Misc.ControlBase.ImageList"/> component associated with the control
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.AutoSizeControlBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.AutoSizeControlBase.CalculatePreferredSize">
            <summary>
            Invoked when the preferred size for the control should be calculated
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.Misc.AutoSizeControlBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Invoked when the size or position of the control changes.
            </summary>
            <param name="x">Left coordinate</param>
            <param name="y">Top coordinate</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
            <param name="specified">Type of change</param>
        </member>
        <member name="M:Infragistics.Win.Misc.AutoSizeControlBase.UpdateAutoSize">
            <summary>
            Adjusts the control size to take into account the auto size.
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.AutoSizeControlBase.OnHandleCreated(System.EventArgs)">
            <summary>
            Invoked when the control is first created.
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.AutoSizeControlBase.OnTextChanged(System.EventArgs)">
            <summary>
            Invoked when the text of the control changes
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.AutoSizeControlBase.OnPropertyChanged(Infragistics.Win.PropertyChangedEventArgs)">
            <summary>
            Use to notify the user when a property of the control has changed.
            </summary>
            <param name="e">Event arguments describing the property change notification</param>
        </member>
        <member name="M:Infragistics.Win.Misc.AutoSizeControlBase.EndUpdate">
            <summary>
            Used to notify the control that it may resume rendering.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.AutoSizeControlBase.AutoSize">
            <summary>
            Gets/sets if the control is automatically sized.
            </summary>
            <remarks>
            <p class="body">The <b>AutoSize</b> property is used to determine if the control 
            should automatically size based on its contents. When set to true, the control will 
            be sized based on the <see cref="P:Infragistics.Win.Misc.AutoSizeControlBase.PreferredSize"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.AutoSizeControlBase.PreferredSize">
            <summary>
            Returns the size required to display the image and text.
            </summary>
            <returns>The size required to display the image and text</returns>
        </member>
        <member name="P:Infragistics.Win.Misc.AutoSizeControlBase.RequiredImageAndTextSize">
            <summary>
            Returns the size need to display the image and the text - does not take into consideration borders or angles.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.AutoSizeControlBase.ReserveImageShadowSpace">
            <summary>
            Indicates whether space should be left for an image shadow.
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.Misc.UltraButtonBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.ShouldSerializePressedAppearance">
            <summary>
            Indicates whether the <see cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/> property contains data that needs to be serialized.
            </summary>
            <returns>Returns true if the <see cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/> property needs to be serialized.</returns>
            <remarks>
            <p class="body">Use this method to determine if an <b>Appearance</b> object has been created and contains data that needs to be serialized.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/>
            <seealso cref="T:Infragistics.Win.AppearanceBase"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.ResetPressedAppearance">
            <summary>
            Resets the <see cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/> property to its default value.
            </summary>
            <remarks>
            <p class="body">Use this method to reset the <see cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/> property. If the <see cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/> property was set to an Appearance from the <b>Appearances</b> collection, the properties on the <see cref="T:Infragistics.Win.AppearanceBase"/> object in the collection will remain the same but the <see cref="T:Infragistics.Win.Appearance"/> property will no longer be attached to that <see cref="T:Infragistics.Win.AppearanceBase"/>. To reset the properties of the associated <b>Appearance</b> object, the <see cref="M:Infragistics.Win.Appearance.Reset"/> method of the <b>Appearance</b> object itself should be invoked instead.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/>
            <seealso cref="T:Infragistics.Win.AppearanceBase"/>
            <seealso cref="M:Infragistics.Win.AppearanceBase.Reset"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.CalculatePreferredSize">
            <summary>
            Invoked when the preferred size for the control should be calculated
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.ResolveAppearance(Infragistics.Win.UIElementButtonState,Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Resolves the appearance for the control
            </summary>
            <param name="buttonState">State of the button</param>
            <param name="appearance">Appearance structure to update</param>
            <param name="requestedProps">Appearance properties to resolve</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.OnSubObjectPropChange(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Invoked when a property on a subobject has changed.
            </summary>
            <param name="propChangeInfo">Information about the property change</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.ProcessMnemonic(System.Char)">
            <summary>
            Invoked when a mnemonic has been pressed.
            </summary>
            <param name="charCode">Character to process</param>
            <returns>True if the character was processed as a mnemonic of the control.</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.ButtonKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Invoked after the key down event has fired for the control.
            </summary>
            <param name="e">Key event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.ButtonKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Invoked after the key up event has fired for the control.
            </summary>
            <param name="e">Key event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.Dispose(System.Boolean)">
            <summary>
            Handles disposing the control's resources.
            </summary>
            <param name="disposing">Boolean indicating if managed and unmanaged resources should be released.</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Invoked when a key is pressed while the control has focus.
            </summary>
            <param name="e">Key event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Invoked when a key is released while the control has focus.
            </summary>
            <param name="e">Key event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.OnGotFocus(System.EventArgs)">
            <summary>
            Invoked when the control receives focus
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.OnClick(System.EventArgs)">
            <summary>
            Invoked when the button has been clicked.
            </summary>
            <param name="e">Event arguments for the <see cref="E:System.Windows.Forms.Control.Click"/> event</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.PerformClick">
            <summary>
            Invokes the control's click event.
            </summary>
            <remarks>
            <p class="body">This method can be called to generate a <see cref="E:System.Windows.Forms.Control.Click"/> event for the control.</p>
            </remarks>
            <see cref="M:System.Windows.Forms.IButtonControl.PerformClick"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonBase.NotifyDefault(System.Boolean)">
            <summary>
            Invoked when the button becomes or is no longer the Default button on the form.
            </summary>
            <param name="value">New default state</param>
            <seealso cref="P:Infragistics.Win.Misc.UltraButtonBase.ShowOutline"/>
            <seealso cref="P:Infragistics.Win.Misc.UltraButtonBase.IsDefault"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.ButtonStyle">
            <summary>
            Gets/sets the style of the button.
            </summary>
            <remarks>
            <p class="note"><b>Note</b> When the operating system supports themes and the <see cref="P:Infragistics.Win.UltraControlBase.SupportThemes"/> property is 
            set to <b>true</b>, the ButtonStyle will not be used since the control's appearance will be rendered using the system's themes.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.ButtonStyleResolved">
            <summary>
            Returns the actual button style used to render the button.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance">
            <summary>
            Gets/sets the appearance for the button when the button is pressed down.
            </summary>
            <remarks>
            <p class="body">The <b>PressedAppearance</b> is used during the resolution of the 
            button's appearance when the button is pressed down. The appearance can be used to 
            specify a different color or image for the button when it is pressed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.HasPressedAppearance">
            <summary>
            Indicates whether an <see cref="T:Infragistics.Win.AppearanceBase"/> object has been created.
            </summary>
            <value>Returns true when the <b>Appearance</b> object for the <see cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/> property has been created.</value>
            <remarks>
            <p class="body">Use this property to determine if an <see cref="T:Infragistics.Win.AppearanceBase"/> object has been created.  Appearance objects in general are not created until the properties associated with them are accessed.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/>
            <seealso cref="T:Infragistics.Win.AppearanceBase"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.AcceptsFocus">
            <summary>
            Gets/sets whether the control takes focus.
            </summary>
            <remarks>
            <p class="body">The <b>AcceptsFocus</b> property is used to determine whether the button can 
            receive focus. By default, this property is set to true so that the control can accept focus 
            and be clicked using the keyboard. When set to false, the control will not be able to be navigated to 
            using the mouse or keyboard.</p>
            <p class="note"><b>Note</b> When a button or other control does not receive focus, regardless of the <b>CausesValidation</b> property, 
            the control with focus will not have its Validating/Validated events fired. These events are controlled and invoked by the base .Net control 
            classes and are not invoked until the control loses focus, the container's Validate method is invoked, etc.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.UltraButtonBase.ShowFocusRect"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.ShowFocusRect">
            <summary>
            Gets/sets whether a focus rect is rendered around the button when
            the control has focus.
            </summary>
            <remarks>
            <p class="body">It is sometimes useful to allow the control to receive focus but to 
            make so that it does not render the focus rectangle (the dotted line within the borders 
            of the button). The ShowFocusRect property may be set to false to prevent the control from 
            rendering the focus rectangle when the control receives focus. When set to true, its default 
            value, the focus rectangle will be rendered when the control has the input focus.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.UltraButtonBase.AcceptsFocus"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.ReserveImageShadowSpace">
            <summary>
            Indicates whether images should display a shadow.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.IsDefault">
            <summary>
            Readonly. Indicates if the button is the default button for the form
            </summary>
            <remarks>
            <p class="body">The button class is notified by the .net framework via the 
            <b>IButtonControl</b> interface when it becomes the default button. This 
            allows the button to modify its appearance to indicate its changed state. When 
            the button is the default button, it will show an extra outline around the border of 
            the control. This appearance change can be prevented using the <see cref="P:Infragistics.Win.Misc.UltraButtonBase.ShowOutline"/> property.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.UltraButtonBase.ShowOutline"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.DefaultImeMode">
            <summary>
            Overriden. Determines the default ImeMode for the control.
            </summary>
            <remarks>
            <p class="body">Since the <b>UltraLabel</b> control does not receive focus and does not use the key messages, the default ImeMode is disabled.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.ImeMode">
            <summary>
            Determines the ImeMode for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.ShowOutline">
            <summary>
            Gets/sets whether an outline is rendered outside the button borders when the button is the default button.
            </summary>
            <remarks>
            <p class="body">When a button becomes the default button, it will render an extra border 
            around the edge of the control. To prevent this behavior, set the ShowOutline property to false.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.UltraButtonBase.IsDefault"/>
        </member>
        <member name="E:Infragistics.Win.Misc.UltraButtonBase.DoubleClick">
            <summary>
            DoubleClick event is not used for a button.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonBase.DialogResult">
            <summary>
            Gets/sets the value returned to the parent form when the button is clicked.
            </summary>
            <remarks>
            <p class="body">When the form containing the button is displayed using the form's <b>ShowDialog</b> method, the 
            <b>DialogResult</b> property of the button may be used to specify the return value of the <b>ShowDialog</b> method.</p>
            </remarks>
            <seealso cref="M:System.Windows.Forms.Form.ShowDialog"/>
            <seealso cref="P:System.Windows.Forms.Form.DialogResult"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButton.#ctor">
            <summary>
            Initializes a new <b>UltraButton</b>
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButton.ButtonKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Invoked after the key down event has fired for the control.
            </summary>
            <param name="e">Key event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButton.ButtonKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Invoked after the key up event has fired for the control.
            </summary>
            <param name="e">Key event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButton.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Resolves the appearance for the control
            </summary>
            <param name="appearance">Appearance structure to update</param>
            <param name="requestedProps">Appearance properties to resolve</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButton.CalculatePreferredSize">
            <summary>
            Invoked when the preferred size for the control should be calculated
            </summary>
            <returns>The preferred size for the control</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Invoked when the mouse is released over the button.
            </summary>
            <param name="e">Event arguments for the MouseUp event</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButton.OnSizeChanged(System.EventArgs)">
            <summary>
            Invoked when the size of the button has changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButton.OnLostFocus(System.EventArgs)">
            <summary>
            Invoked when the control loses focus.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButton.AutoRepeat">
            <summary>
            Gets/sets if the click event will continue to fire as the mouse is held down over the button.
            </summary>
            <remarks>
            <p class="body">When <b>AutoRepeat</b> is set to <b>true</b>, the click event will be invoked when the 
            SPACE key is first pressed or when the button is first pushed down. It will then wait for the delay specified 
            by the <see cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeatDelay"/> before entering an auto-repeat mode. While in this mode, until the mouse 
            button is released or the SPACE key is released, the <see cref="E:System.Windows.Forms.Control.Click"/> event will be 
            invoked after the <see cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeatInterval"/> has elasped.</p>
            <p class="body"><b>Note</b> When set to <b>false</b>, which is the default value, the click event will only 
            occur when the button is released (by either releasing the mouse button that pressed the button or releasing 
            the SPACE or ENTER key).</p>
            </remarks>
            <seealso cref="E:System.Windows.Forms.Control.Click"/>
            <seealso cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeatInterval"/>
            <seealso cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeatDelay"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButton.AutoRepeatDelay">
            <summary>
            Gets/sets the amount of time that elapses before the button enters <see cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeat"/> mode.
            </summary>
            <seealso cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeat"/>
            <seealso cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeatInterval"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButton.AutoRepeatInterval">
            <summary>
            Gets/sets the amount of time that elapses between each <see cref="E:System.Windows.Forms.Control.Click"/> event as the mouse is held down over the button.
            </summary>
            <seealso cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeat"/>
            <seealso cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeatDelay"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButton.ControlUIElement">
            <summary>
            Returns the main UIElement for the control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButton.ShapeImage">
            <summary>
            Gets/sets the image used to generate the shape for the control.
            </summary>
            <remarks>
            <p class="body">The <b>ShapeImage</b> property is used to create a non-rectangular shaped button. The image specified for 
            this property is used to create the region for the button control as well as being used to render the borders of the button. 
            The color in the lower left hand pixel of the image is used to determine which color will be "masked" out - that is, which color 
            will determine the areas of the image that are considered transparent. All pixels that do not match this color are considered to 
            be opaque and will make up the displayed area of the button.</p>
            </remarks>
            <p class="note"><b>Note</b> When a ShapeImage is specified and <see cref="P:Infragistics.Win.Misc.AutoSizeControlBase.AutoSize"/> is set to <b>true</b>, 
            the control will be sized based on the size of the ShapeImage since it is not possible to size the button so that the contents 
            (image and text) are visible within the non-transparent areas of the button.</p>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButton.ImageRegion">
            <summary>
            Returns the ImageRegion object that manages the creation of the region object based on the shape image.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButton.ButtonStyleResolved">
            <summary>
            Returns the actual button style used to render the button.
            </summary>
            <remarks>
            <p class="body">When the <see cref="P:Infragistics.Win.Misc.UltraButtonBase.ButtonStyle"/> property is 
            set to <b>Default</b>, the default button style will be 'Button', which is a 2 pixel 
            border appearing similar to that of a standard windows button.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButton.About">
            <summary>
            Displays the About dialog for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButton.Infragistics#Shared#IUltraLicensedComponent#License">
            <summary>
            Return the license we cached inside the constructor
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.UltraButtonControlUIElement">
            <summary>
            Main UIElement for the <see cref="T:Infragistics.Win.Misc.UltraButton"/> control
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonControlUIElement.#ctor(Infragistics.Win.Misc.UltraButton)">
            <summary>
            Initializes a new <b>UltraButtonControlUIElement</b>
            </summary>
            <param name="button">UltraButton control owning the uielement</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonControlUIElement.PositionChildElements">
            <summary>
            Handles the creation and positioning of the child elements
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonControlUIElement.Button">
            <summary>
            Returns the owning button control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonControlUIElement.BorderStyle">
            <summary>
            Returns the borderstyle used when rendering the button control
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.UltraButtonUIElement">
            <summary>
            AutoRepeat capable button class for rendering text and an image for the <see cref="T:Infragistics.Win.Misc.UltraButton"/> control
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonUIElement.#ctor(Infragistics.Win.Misc.UltraButtonControlUIElement)">
            <summary>
            Initializes a new <b>UltraButtonUIElement</b>
            </summary>
            <param name="parent">Parent UIElement</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonUIElement.PositionChildElements">
            <summary>
            Handles the creation and positioning of the child elements
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonUIElement.DrawTheme(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Renders the themed version of the element
            </summary>
            <param name="drawParams">Draw parameters</param>
            <returns>True if the element could be rendered using the system themes</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overriden. Prevent the base class from rendering the foreground of the button
            </summary>
            <param name="drawParams">Draw parameters</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the appearance information for the uielement
            </summary>
            <param name="appearance">Appearance structure to update</param>
            <param name="requestedProps">Appearance properties to resolve</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonUIElement.ButtonClick">
            <summary>
            Invoked when the button has been clicked.
            </summary>
            <returns>True to prevent the base implementation from being invoked.</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonUIElement.DrawFocus(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Renders the focus rect within the button
            </summary>
            <param name="drawParams">Draw parameters</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonUIElement.Reset">
            <summary>
            Resets the state of the button
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraButtonUIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the button released
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonUIElement.ButtonStyle">
            <summary>
            Gets the button style for the element.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonUIElement.Style">
            <summary>
            Gets/sets the style of the button.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonUIElement.ImageAndTextElement">
            <summary>
            Returns the contained UIElement that renders the image and text.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonUIElement.Button">
            <summary>
            Returns the owning button control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonUIElement.DrawsFocusRect">
            <summary>
            Indicates if the button should display a focus rect.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonUIElement.DrawsImageBackground">
            <summary>
            Determines whether the element can render an image background.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraButtonUIElement.IsButtonStyleMouseActive">
            <summary>
            Indicates if the button area is invalidated when the mouse enters and leaves the element.
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.CommonControls.AnimationControl">
            <summary>
            Common Controls Animation Control
            </summary>
            <remarks>
            <p class="body">The <b>AnimationControl</b> class is a wrapper for the Microsoft Common Controls 
            Animation Control class. The control provides the ability to display AVIs without sound.</p>
            <p class="body">The <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AnimationSource"/> property determines where the AVI is obtained. If set 
            to <b>AviFile</b>, the <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.FileName"/> is used to obtain the avi file when the avi will be played. Other members 
            of the <see cref="T:Infragistics.Win.Misc.CommonControls.AnimationType"/> enum indicate that common system avi files should be used instead.</p>
            <p class="body">The <see cref="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Play(Infragistics.Win.Misc.CommonControls.AnimationType,System.String,System.Int32,System.Int32,System.Int32)"/> and <see cref="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Stop"/> methods are used to start and stop the animation respectively. If the 
            <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AutoPlay"/> property is set to true, the animation will start playing when the handle for the control is created. Also, 
            whenever the state of the animation changes, the <see cref="E:Infragistics.Win.Misc.CommonControls.AnimationControl.StateChanged"/> event is invoked.</p>
            <p class="note"><b>Note</b> Since the class overrides members of the <see cref="T:System.Windows.Forms.Control"/> class 
            that have link demands for unmanaged code rights, such as the WndProc and CreateParams, the class must have unmanaged 
            code rights in order to be used. If these rights are not granted to the assembly and an instance of a derived instance of 
            this control is sited on a form or usercontrol, a security exception is invoked when that form or usercontrol is about to 
            load (i.e. during the jit of the containing class).</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.Misc.CommonControls.CommonControlBase">
            <summary>
            Abstract base class for a Microsoft Common Control based control.
            </summary>
            <remarks>
            <p class="body">The <b>CommonControlBase</b> class is an abstract base class for creating a control 
            wrapper for a Microsoft Common Control.</p>
            <p class="note"><b>Note</b> Since the class overrides members of the <see cref="T:System.Windows.Forms.Control"/> class 
            that have link demands for unmanaged code rights, such as the WndProc and CreateParams, the class must have unmanaged 
            code rights in order to be used. If these rights are not granted to the assembly and an instance of a derived instance of 
            this control is sited on a form or usercontrol, a security exception is invoked when that form or usercontrol is about to 
            load (i.e. during the jit of the containing class).</p>
            </remarks>
            <seealso cref="T:Infragistics.Win.Misc.CommonControls.AnimationControl"/>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.#ctor">
            <summary>
            Base constructor for common controls
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.CreateHandle">
            <summary>
            Invoked when the handle for the control is being created
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Invoked when a windows message is sent to the control
            </summary>
            <param name="m">Message structure containing information about the message</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.ProcessReflectedMessage(System.Windows.Forms.Message@,System.Int32)">
            <summary>
            Invoked when a message is reflected back from the containing control.
            </summary>
            <param name="m">By ref message structure</param>
            <param name="reflectedMessage">Underlying reflected window message</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.ProcessCommandMessage(System.Windows.Forms.Message@,System.Int32)">
            <summary>
            Invoked when a WM_COMMAND message is sent to the window procedure
            </summary>
            <param name="m">By reference message structure</param>
            <param name="notificationCode">Notification code from the </param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.ProcessNotifyMessage(System.Windows.Forms.Message@,System.Int32)">
            <summary>
            Invoked when a WM_NOTIFY message is sent to the window procedure
            </summary>
            <param name="m">By reference message structure</param>
            <param name="notificationCode">Notification code from the NMHDR struct</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.ProcessParentNotifyMessage(System.Windows.Forms.Message@,Infragistics.Win.Misc.CommonControls.CommonControlBase.WmParentNotifyMessage,System.Boolean)">
            <summary>
            Invoked when a WM_PARENTNOTIFY message is sent to the window procedure
            </summary>
            <param name="m">By reference message structure</param>
            <param name="notificationType">Type of event notification</param>
            <param name="reflected">True if the parent notify came from a reflected parent notify message</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.AddStyle(System.Int32)">
            <summary>
            Adds the specified style bit to the current window if already created.
            </summary>
            <param name="styleToAdd">Bit to add</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.AddExStyle(System.Int32)">
            <summary>
            Adds the specified extended style bit to the current window if already created.
            </summary>
            <param name="styleToAdd">Bit to add</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.RemoveStyle(System.Int32)">
            <summary>
            Removes the specified style bit from the current window if already created
            </summary>
            <param name="styleToRemove">Style bit to remove</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.RemoveExStyle(System.Int32)">
            <summary>
            Removes the specified style bit from the current window if already created
            </summary>
            <param name="styleToRemove">Style bit to remove</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.AddBorderStyle(System.Windows.Forms.CreateParams,System.Windows.Forms.BorderStyle)">
            <summary>
            Adds the bits style necessary to get the desired border style effect
            </summary>
            <param name="cp">CreateParams instance to update</param>
            <param name="borderStyle">Desired border style</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.AddBorderStyle(System.Int32@,System.Int32@,System.Windows.Forms.BorderStyle)">
            <summary>
            Adds the bits style necessary to get the desired border style effect
            </summary>
            <param name="currentStyle">Current window long style</param>
            <param name="currentExStyle">Current extended window style</param>
            <param name="borderStyle">Desired border style</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.UpdateBorderStyle(System.Windows.Forms.BorderStyle)">
            <summary>
            Updates the border style of the control if the window handle exists
            </summary>
            <param name="borderStyle">Border style desired</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.CommonControlBase.RecreateControl">
            <summary>
            Used to recreate the handle if the window has already been created
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.CommonControlBase.CommonControlType">
            <summary>
            Returns the type of common control class that must be initialize to create the common control class.
            </summary>
        </member>
        <member name="E:Infragistics.Win.Misc.CommonControls.CommonControlBase.Paint">
            <summary>
            Paint event is not used for a microsoft common control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.CommonControlBase.BackgroundImage">
            <summary>
            Overriden. The <b>BackgroundImage</b> property does not affect the control
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.CommonControls.CommonControlBase.WmParentNotifyMessage">
            <summary>
            Enumerations for the event notifications for a WM_PARENTNOTIFY message
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlBase.WmParentNotifyMessage.Create">
            <summary>
            A child window is being created
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlBase.WmParentNotifyMessage.Destroy">
            <summary>
            A child window is being destroyed
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlBase.WmParentNotifyMessage.LButtonDown">
            <summary>
            Left mouse button depressed
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlBase.WmParentNotifyMessage.RButtonDown">
            <summary>
            Right mouse button depressed
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlBase.WmParentNotifyMessage.MButtonDown">
            <summary>
            Middle button depressed
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlBase.WmParentNotifyMessage.XButtonDown">
            <summary>
            The first or second X button - Only under Windows 2000 and XP
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.#ctor">
            <summary>
            Initializes a new <b>AnimationControl</b> control
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.OnHandleCreated(System.EventArgs)">
            <summary>
            Invoked when the handle for the control is created
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.ProcessCommandMessage(System.Windows.Forms.Message@,System.Int32)">
            <summary>
            Invoked when a WM_COMMAND message is sent to the window procedure
            </summary>
            <param name="m">By reference message structure</param>
            <param name="notificationCode">Notification code from the </param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Dispose(System.Boolean)">
            <summary>
            Invoked when the control's resources should be released and the control is disposed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.RecreateControl">
            <summary>
            Used to recreate the handle if the window has already been created
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Invoked when a windows message is sent to the control
            </summary>
            <param name="m">Message structure containing information about the message</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Open(System.String)">
            <summary>
            Opens the specified avi animation file
            </summary>
            <param name="filename">Filename of the animation to open. The <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.FileName"/> property is updated with this value</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Open">
            <summary>
            Opens the avi animation source specified by the <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AnimationSource"/> property
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Stop">
            <summary>
            Stops playing the current animation
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Seek(System.Int32)">
            <summary>
            Positions the animation at the specified frame
            </summary>
            <param name="frame">Frame number</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Close">
            <summary>
            Closes the currently opened animation file
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Play(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Plays the specified file
            </summary>
            <param name="filename">File name of the avi animation to play. The <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.FileName"/> property is updated with this value</param>
            <param name="repetitions">Number of times to play the animation. -1 indicates unlimited cycles</param>
            <param name="startFrame">Starting frame number. 0 is the first frame</param>
            <param name="endFrame">Ending frame number. -1 indicates the last frame</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Play(System.String,System.Int32)">
            <summary>
            Plays the specified file
            </summary>
            <param name="filename">File name of the avi animation to play. The <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.FileName"/> property is updated with this value</param>
            <param name="repetitions">Number of times to play the animation. -1 indicates unlimited cycles</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Play(System.String)">
            <summary>
            Plays the specified file
            </summary>
            <param name="filename">File name of the avi animation to play. The <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.FileName"/> property is updated with this value</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Play(System.Int32,System.Int32,System.Int32)">
            <summary>
            Plays the <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AnimationSource"/> a specified number of times starting with a particular
            frame and ending with a particular frame.
            </summary>
            <param name="repetitions">Number of times to play the animation. -1 indicates unlimited cycles</param>
            <param name="startFrame">Starting frame number. 0 is the first frame</param>
            <param name="endFrame">Ending frame number. -1 indicates the last frame</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Play(System.Int32)">
            <summary>
            Plays the <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AnimationSource"/> a specified number of times
            </summary>
            <param name="repetitions">Number of times to play the animation. -1 indicates unlimited cycles</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Play">
            <summary>
            Plays the animation specified by the <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AnimationSource"/> property
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.AnimationControl.OnStateChanged(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.Misc.CommonControls.AnimationControl.StateChanged"/> event when the animation
            starts or ends playing. The <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.IsPlaying"/> can be used to
            determine if the animation is currently playing.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.CommonControlType">
            <summary>
            Returns the type of common control class that must be initialize to create the common control class.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.CreateParams">
            <summary>
            Information used to create the control window
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.Font">
            <summary>
            Overriden. The <b>Font</b> property does not affect the <see cref="T:Infragistics.Win.Misc.CommonControls.AnimationControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.ForeColor">
            <summary>
            Overiden. The <b>ForeColor</b> for the control does not affect the <see cref="T:Infragistics.Win.Misc.CommonControls.AnimationControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.TabStop">
            <summary>
            Overriden. Determines whether the control will receive focus when tabbing through the controls.
            </summary>
            <remarks>
            <p class="body">The <b>AnimationControl</b> does not receive focus so changing this property will not affect the control.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.DefaultImeMode">
            <summary>
            Overriden. Determines the default ImeMode for the control.
            </summary>
            <remarks>
            <p class="body">Since the <b>AnimationControl</b> does not receive focus and does not use the key messages, the default ImeMode is disabled.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.ImeMode">
            <summary>
            Determines the ImeMode for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.Text">
            <summary>
            Text property - Not supported.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.IsPlaying">
            <summary>
            Indicates if the animation is currently playing
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.IsOpen">
            <summary>
            Indicates if an animation is currently opened
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.FileName">
            <summary>
            Gets/sets the filename of the animation to play
            </summary>
            <remarks>
            <p class="body">The <b>FileName</b> property indicates the name of the avi file that should 
            be played when the <see cref="M:Infragistics.Win.Misc.CommonControls.AnimationControl.Play(Infragistics.Win.Misc.CommonControls.AnimationType,System.String,System.Int32,System.Int32,System.Int32)"/> method is invoked. The <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AnimationSource"/> 
            property should be set to <b>AviFile</b> to use this property.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AnimationSource"/>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AutoPlay">
            <summary>
            Gets/sets whether the animation should automatically play
            </summary>
            <remarks>
            <p class="body">When set to true, the animation will automatically 
            begin when the handle for the control is created.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AutoCenter">
            <summary>
            Gets/sets whether the animation is centered in the control
            </summary>
            <remarks>
            <p class="body">When set to <b>true</b>, the animation will be 
            centered within the control bounds as the control is resized. When set to 
            <b>false</b>, the animation is sited in the upper left corner of the client 
            area of the control.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.UseTimer">
            <summary>
            Gets/sets whether the animation is played using a timer instead of a separate thread.
            </summary>
            <remarks>
            <p class="body">When set to true, the animation control will use a timer instead of a 
            separate thread to handle changing the frames of the animation.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.Transparent">
            <summary>
            Gets/sets whether the animation is displayed transparently
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.BorderStyle">
            <summary>
            Border style rendered around the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AnimationSource">
            <summary>
            Gets/sets the source of the animation
            </summary>
            <remarks>
            <p class="body">The <b>AnimationSource</b> determines which animation will be displayed. When set 
            to <b>AviFile</b>, the animation is obtained from the file specified for the <see cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.FileName"/>. Other 
            settings are common operating system animations.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.FileName"/>
        </member>
        <member name="E:Infragistics.Win.Misc.CommonControls.AnimationControl.StateChanged">
            <summary>
            Invoked when the animation starts and ends playing.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.About">
            <summary>
            Displays the About dialog for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.AnimationControl.Infragistics#Shared#IUltraLicensedComponent#License">
            <summary>
            Return the license we cached inside the constructor
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.CommonControls.Design.AnimationControlDesigner">
            <summary>
            Designer for the <see cref="P:Infragistics.Win.Misc.CommonControls.Design.AnimationControlDesigner.AnimationControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.Design.AnimationControlDesigner.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.Design.AnimationControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Invoked after the control has been painted at design time.
            </summary>
            <param name="pe">Paint event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.Design.AnimationControlDesigner.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Invoked before the message is routed to the control managed by the designer
            </summary>
            <param name="m">By ref message structure</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.Design.AnimationControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Used to filter and/or shadow properties that appear for the component at design time.
            </summary>
            <param name="properties">Collection of properties</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.Design.AnimationControlDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Invoked when the designer is associated with the component
            </summary>
            <param name="component">Component managed by the designer</param>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.Design.AnimationControlDesigner.Dispose(System.Boolean)">
            <summary>
            Invoked when the designer is disposed
            </summary>
            <param name="disposing">True if managed resource should be disposed</param>
        </member>
        <member name="P:Infragistics.Win.Misc.CommonControls.Design.AnimationControlDesigner.Verbs">
            <summary>
            Returns a collection of verb actions that the control can take.
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.CommonControls.Design.AVIFileEditor">
            <summary>
            Type editor for selecting an AVI file
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.CommonControls.Design.AVIFileEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
            <summary>
            Initializes the members of the file dialog.
            </summary>
            <param name="openFileDialog">Open file dialog used to select the file.</param>
        </member>
        <member name="T:Infragistics.Win.Misc.CommonControls.CommonControlClasses">
            <summary>
            Enumeration of Common Control class types
            </summary>
            <seealso cref="T:Infragistics.Win.Misc.CommonControls.CommonControlBase"/>
            <seealso cref="P:Infragistics.Win.Misc.CommonControls.CommonControlBase.CommonControlType"/>
            <seealso cref="T:Infragistics.Win.Misc.CommonControls.AnimationControl"/>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.ListViewClasses">
            <summary>
            ListView and Header classes
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.TreeViewClasses">
            <summary>
            TreeView and ToolTips classes
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.BarClasses">
            <summary>
            ToolBar, StatusBar, TrackBar and ToolTips classes
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.TabClasses">
            <summary>
            Tab and ToolTips classes
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.UpDownClass">
            <summary>
            UpDown class
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.ProgressClass">
            <summary>
            Progress class
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.HotKeyClass">
            <summary>
            HotKey class
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.AnimateClass">
            <summary>
            Animate class
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.Win95Classes">
            <summary>
            Win95 class
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.DateClasses">
            <summary>
            Date classes - Month picker, Date picker, Time picker, up down
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.UserExClasses">
            <summary>
            ComboBoxEx
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.CoolClasses">
            <summary>
            Rebar/Coolbox control
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.InternetClasses">
            <summary>
            Internet classes
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.PageScrollClasses">
            <summary>
            Pager class
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.NativeFontControlClasses">
            <summary>
            Native Font Control
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.StandardClasses">
            <summary>
            Standard Classes
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.CommonControlClasses.LinkClass">
            <summary>
            Link class
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.CommonControls.AnimationType">
            <summary>
            Enumerations of animation sources
            </summary>
            <seealso cref="P:Infragistics.Win.Misc.CommonControls.AnimationControl.AnimationSource"/>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.AnimationType.AviFile">
            <summary>
            The specified file is used
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.AnimationType.FindFolder">
            <summary>
            The system find folder animation
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.AnimationType.FindFile">
            <summary>
            The system find file animation
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.AnimationType.FindComputer">
            <summary>
            The system find computer animation
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.AnimationType.FileCopy">
            <summary>
            The system animation displayed when a file is copied
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.AnimationType.FileMove">
            <summary>
            The system animation displayed when a file is moved
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.AnimationType.FileDeleteToRecycle">
            <summary>
            The system animation displayed when a file is moved to the recycle bin
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.AnimationType.EmptyRecycleBin">
            <summary>
            The system animation displayed when emptying the recycle bin
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.CommonControls.AnimationType.FileDelete">
            <summary>
            The system animation displayed when a file is deleted
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.DropDownButtonControlUIElement">
            <summary>
            Control UIElement for a <see cref="T:Infragistics.Win.Misc.UltraDropDownButton"/> control
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.DropDownButtonControlUIElement.#ctor(Infragistics.Win.Misc.UltraDropDownButton)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.Misc.DropDownButtonControlUIElement"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.DropDownButtonControlUIElement.PositionChildElements">
            <summary>
            Handles the creation and positioning of the child elements
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.DropDownButtonControlUIElement.OnPreMouseDown(Infragistics.Win.MouseMessageInfo@)">
            <summary>
            Invoked when the mouse is pressed down on the control prior to passing the notification to the elements.
            </summary>
            <param name="msgInfo">MouseMessageInfo</param>
            <returns>True if the dropdown is displayed to bypass processing the mouse down notification.</returns>
        </member>
        <member name="P:Infragistics.Win.Misc.DropDownButtonControlUIElement.BorderStyle">
            <summary>
            Returns the borderstyle used when rendering the button control
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.SplitButtonDropDownUIElement">
            <summary>
            Dropdown button element for a split button.
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonDropDownUIElement.#ctor(Infragistics.Win.Misc.DropDownButtonControlUIElement)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.Misc.SplitButtonDropDownUIElement"/>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonDropDownUIElement.DrawBorders(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Draws the button borders
            </summary>
            <param name="drawParams">UIElementDrawParams</param>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonDropDownUIElement.DrawTheme(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Renders the themed version of the element
            </summary>
            <param name="drawParams">Draw parameters</param>
            <returns>True if the element could be rendered using the system themes</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonDropDownUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overriden. Prevent the base class from rendering the foreground of the button
            </summary>
            <param name="drawParams">Draw parameters</param>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonDropDownUIElement.OnButtonStateChange">
            <summary>
            Invoked when the state of the button changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonDropDownUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse is pressed over the button
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonDropDownUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the appearance information for the uielement
            </summary>
            <param name="appearance">Appearance structure to update</param>
            <param name="requestedProps">Appearance properties to resolve</param>
        </member>
        <member name="P:Infragistics.Win.Misc.SplitButtonDropDownUIElement.ButtonStyle">
            <summary>
            Gets the button style for the element.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.SplitButtonDropDownUIElement.BorderSides">
            <summary>
            Returns flags indicating which borders will be drawn
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.SplitButtonUIElement">
            <summary>
            Main button element for a split button.
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.#ctor(Infragistics.Win.Misc.DropDownButtonControlUIElement)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.Misc.SplitButtonUIElement"/>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.DrawBorders(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Draws the button borders
            </summary>
            <param name="drawParams">UIElementDrawParams</param>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.DrawTheme(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Renders the themed version of the element
            </summary>
            <param name="drawParams">Draw parameters</param>
            <returns>True if the element could be rendered using the system themes</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.OnButtonStateChange">
            <summary>
            Invoked when the state of the button changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse is pressed over the button
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the appearance information for the uielement
            </summary>
            <param name="appearance">Appearance structure to update</param>
            <param name="requestedProps">Appearance properties to resolve</param>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.PositionChildElements">
            <summary>
            Handles the creation and positioning of the child elements
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.DrawFocus(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Renders the focus rect within the button
            </summary>
            <param name="drawParams">Draw parameters</param>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the button released
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.Reset">
            <summary>
            Resets the state of the button
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.SplitButtonUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overriden. Prevent the base class from rendering the foreground of the button
            </summary>
            <param name="drawParams">Draw parameters</param>
        </member>
        <member name="P:Infragistics.Win.Misc.SplitButtonUIElement.ButtonStyle">
            <summary>
            Gets the button style for the element.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.SplitButtonUIElement.ImageAndTextElement">
            <summary>
            Returns the contained UIElement that renders the image and text.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.SplitButtonUIElement.DrawsFocusRect">
            <summary>
            Indicates if the button should display a focus rect.
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.UltraDropDownButton">
            <summary>
            Represents a button control that can display a dropdown window.
            </summary>
            <remarks>
            <p class="body">The <b>UltraDropDownButton</b> is a button control that can display a dropdown window.</p>
            <p class="body"> When the <see cref="P:Infragistics.Win.Misc.UltraDropDownButton.Style"/> is set to <b>SplitButton</b>, the control displays 2 buttons areas. The main 
            button area acts as a standard button and will invoke the <see cref="E:System.Windows.Forms.Control.Click"/> 
            event when the button is released. An additional button with a dropdown arrow is displayed and can be used to display the dropdown 
            window. When the <b>Style</b> is set to <b>DropDownButtonOnly</b>, only one button is displayed. When clicked, this button displays 
            the dropdown window.</p>
            <p class="body">The <see cref="P:Infragistics.Win.Misc.UltraDropDownButton.PopupItem"/> property is used to specify the object that will provide the 
            dropdown window. This could be any class that implements the <see cref="T:Infragistics.Win.IPopupItem"/> interface 
            including the <see cref="T:Infragistics.Win.Misc.UltraPopupControlContainer"/> or any <b>PopupToolBase</b> from an UltraToolbarsManager including 
            its PopupMenuTool, PopupColorPickerTool, or PopupControlContainer tool.</p>
            <p class="body">When the dropdown window is about to be displayed, the <see cref="E:Infragistics.Win.Misc.UltraDropDownButton.DroppingDown"/> event is invoked and may 
            be cancelled to prevent the dropdown from being displayed. If the dropdown window is displayed, the <see cref="E:Infragistics.Win.Misc.UltraDropDownButton.ClosedUp"/> event 
            will be invoked after the dropdown window has been closed.</p>
            <p class="body">Set the <b>AcceptButton</b> or <b>CancelButton</b> property of a <b>Form</b> to the button to allow the 
            click event to be invoked using the ENTER or ESC keys respectively even if the button does not have focus.</p>
            <p class="body">When the form containing the button is displayed using the form's <b>ShowDialog</b> method, the 
            <see cref="T:System.Windows.Forms.DialogResult"/> property of the button may be used to specify the return value of the <b>ShowDialog</b> method.</p>
            <p class="note"><b>Note</b> Even when the <see cref="P:Infragistics.Win.Misc.UltraDropDownButton.Style"/> property is set to <b>DropDownButtonOnly</b>, the 
            <see cref="E:System.Windows.Forms.Control.Click"/> event will still be invoked if it is the <b>AcceptButton</b> or 
            <b>CancelButton</b> for the form and the ENTER or ESC key is pressed.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraDropDownButton.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.Misc.UltraDropDownButton"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraDropDownButton.CalculatePreferredSize">
            <summary>
            Invoked when the preferred size for the control should be calculated
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraDropDownButton.ButtonKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Invoked after the key down event has fired for the control.
            </summary>
            <param name="e">Key event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraDropDownButton.ButtonKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Invoked after the key up event has fired for the control.
            </summary>
            <param name="e">Key event arguments</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraDropDownButton.DropDown">
            <summary>
            Used to display the dropdown window.
            </summary>
            <remarks>
            <p class="body">The <b>DropDown</b> method is used to display the dropdown window. If the 
            button is already dropped down (see <see cref="P:Infragistics.Win.Misc.UltraDropDownButton.IsDroppedDown"/>), nothing further occurs. 
            Otherwise, the <see cref="E:Infragistics.Win.Misc.UltraDropDownButton.DroppingDown"/> event is invoked and if not cancelled, the 
            dropdown window is displayed.</p>
            <p class="body">The control may also be dropped down by clicking on the dropdown button or 
            via the DOWN arrow key when the control has focus.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.UltraDropDownButton.IsDroppedDown"/>
            <seealso cref="M:Infragistics.Win.Misc.UltraDropDownButton.CloseUp"/>
            <seealso cref="E:Infragistics.Win.Misc.UltraDropDownButton.DroppingDown"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraDropDownButton.CloseUp">
            <summary>
            Used to close up the dropdown window.
            </summary>
            <remarks>
            <p class="body">The <b>CloseUp</b> method is used to close the dropdown window. Once the 
            dropdown window has been closed, the <see cref="E:Infragistics.Win.Misc.UltraDropDownButton.ClosedUp"/> event will be invoked.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.Misc.UltraDropDownButton.IsDroppedDown"/>
            <seealso cref="M:Infragistics.Win.Misc.UltraDropDownButton.DropDown"/>
            <seealso cref="E:Infragistics.Win.Misc.UltraDropDownButton.ClosedUp"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraDropDownButton.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Overrides the control's determination of what is considered an input key.
            </summary>
            <param name="keyData">Key</param>
            <returns>A boolean indicating if this key is an input key for the control.</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraDropDownButton.OnLeave(System.EventArgs)">
            <summary>
            Called when the control is left
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraDropDownButton.OnDroppingDown(System.ComponentModel.CancelEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.Misc.UltraDropDownButton.DroppingDown"/> event before the dropdown is displayed.
            </summary>
            <param name="e">Event arguments</param>
            <seealso cref="E:Infragistics.Win.Misc.UltraDropDownButton.DroppingDown"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraDropDownButton.OnClosedUp(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.Misc.UltraDropDownButton.ClosedUp"/> event when the dropdown has been closed.
            </summary>
            <param name="e">Event arguments</param>
            <seealso cref="E:Infragistics.Win.Misc.UltraDropDownButton.ClosedUp"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraDropDownButton.ControlUIElement">
            <summary>
            Returns the main UIElement for the control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraDropDownButton.Style">
            <summary>
            Returns or sets the display style for the split button control.
            </summary>
            <remarks>
            <p class="body">The <b>Style</b> property is used to determine the display style for the control. 
            When set to <b>SplitButton</b>, which is the default value, two buttons will be displayed. The main 
            button that will display the image and text and will invoke the <see cref="E:System.Windows.Forms.Control.Click"/> 
            event when pressed. The secondary button, displayed on the right side of the button and displaying a dropdown arrow, 
            will be used to display the dropdown window (see <see cref="P:Infragistics.Win.Misc.UltraDropDownButton.PopupItem"/>). When set to <b>DropDownButtonOnly</b> only 
            one button element is displayed. This button will display the image and text as well as a dropdown arrow. When pressed, 
            the dropdown window will be displayed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraDropDownButton.PopupItemProvider">
            <summary>
            This member supports the UltraDropDownButton infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraDropDownButton.PopupItemKey">
            <summary>
            This member supports the UltraDropDownButton infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraDropDownButton.PopupItem">
            <summary>
            Returns or sets the object that displays the dropdown window.
            </summary>
            <remarks>
            <p class="body">The <b>PopupItem</b> property specifies the object that will display 
            the dropdown window. This can be any object that implements the <see cref="T:Infragistics.Win.IPopupItem"/> 
            interface including the <see cref="T:Infragistics.Win.Misc.UltraPopupControlContainer"/> or any <b>PopupToolBase</b> type tool 
            from an UltraToolbarsManager component (e.g. PopupMenuTool, PopupColorPickerTool, PopupControlContainer type 
            tools).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraDropDownButton.IsDroppedDown">
            <summary>
            Indicates whether the dropdown window is currently being displayed.
            </summary>
        </member>
        <member name="E:Infragistics.Win.Misc.UltraDropDownButton.DroppingDown">
            <summary>
            Invoked before the dropdown is displayed
            </summary>
            <remarks>
            <p class="body">The <b>DroppingDown</b> event is raised when the dropdown window 
            (specified using the <see cref="P:Infragistics.Win.Misc.UltraDropDownButton.PopupItem"/> property) is about to be displayed. If 
            the event is cancelled or there is nothing to dropdown, the dropdown will not be displayed.</p>
            </remarks>
            <seealso cref="M:Infragistics.Win.Misc.UltraDropDownButton.DropDown"/>
            <seealso cref="P:Infragistics.Win.Misc.UltraDropDownButton.IsDroppedDown"/>
            <seealso cref="E:Infragistics.Win.Misc.UltraDropDownButton.ClosedUp"/>
        </member>
        <member name="E:Infragistics.Win.Misc.UltraDropDownButton.ClosedUp">
            <summary>
            Invoked after the dropdown has closed up
            </summary>
            <remarks>
            <p class="body">The <b>ClosedUp</b> event is invoked after the dropdown window has been closed.</p>
            </remarks>
            <seealso cref="M:Infragistics.Win.Misc.UltraDropDownButton.CloseUp"/>
            <seealso cref="P:Infragistics.Win.Misc.UltraDropDownButton.IsDroppedDown"/>
            <seealso cref="E:Infragistics.Win.Misc.UltraDropDownButton.DroppingDown"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraDropDownButton.About">
            <summary>
            Displays the About dialog for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraDropDownButton.Infragistics#Shared#IUltraLicensedComponent#License">
            <summary>
            Return the license we cached inside the constructor
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.Design.UltraDropDownButtonDesigner">
            <summary>
            Designer for the <see cref="T:Infragistics.Win.Misc.UltraDropDownButton"/> control
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.Design.AutoSizeControlBaseDesigner">
            <summary>
            Base designer class for controls derived from <see cref="T:Infragistics.Win.Misc.ControlBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.Design.AutoSizeControlBaseDesigner.SelectionRules">
            <summary>
            Determines the allowed selection behavior and sizing behavior for the control.
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.Design.UltraDropDownButtonDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Prepares the designer to view, edit, and design the specified component.
            </summary>
            <param name="component">Component to be managed by the designer</param>
        </member>
        <member name="M:Infragistics.Win.Misc.Design.UltraDropDownButtonDesigner.Dispose(System.Boolean)">
            <summary>
            Disposes of resources used by the designer
            </summary>
            <param name="disposing">True if managed resources should be released.</param>
        </member>
        <member name="M:Infragistics.Win.Misc.Design.UltraDropDownButtonDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Used to filter and/or shadow properties that appear for the component at design time.
            </summary>
            <param name="properties">Collection of properties</param>
        </member>
        <member name="T:Infragistics.Win.Misc.Design.UltraDropDownButtonDesigner.PopupItemUITypeEditor">
            <summary>
            UITypeEditor for the <see cref="T:Infragistics.Win.Misc.UltraDropDownButton"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.Design.UltraDropDownButtonDesigner.PopupItemUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Used to edit the value and convert the value as needed.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">Current value</param>
            <returns>Edited value.</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.Design.UltraDropDownButtonDesigner.PopupItemUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Used to determine the type of UIEditor that will be displayed.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle specifying the type of UIEditor.</returns>
        </member>
        <member name="T:Infragistics.Win.Misc.UltraLabel">
            <summary>
            Represents a standard windows label.
            </summary>
            <remarks>
            <p class="body">The <b>UltraLabel</b> control has functionality similar to that of the 
            intrinsic .Net Label control as well as some additional functionality. There is an <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> 
            property that can be used to specify a gradient or hatched appearance as well as a <see cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/> 
            to more easily provide a different appearance when the mouse is over the control.</p>
            <p class="body">The <see cref="P:Infragistics.Win.Misc.UltraLabel.BorderStyleInner"/> and <see cref="P:Infragistics.Win.Misc.UltraLabel.BorderStyleOuter"/> can be used 
            to create various border effects. The <see cref="P:Infragistics.Win.Misc.UltraLabel.InnerBorderPadding"/> controls the amount of space between 
            the inner and outer borders.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraLabel.#ctor">
            <summary>
            Initializes a new <b>UltraLabel</b>
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraLabel.ProcessMnemonic(System.Char)">
            <summary>
            Invoked when a mnemonic has been pressed.
            </summary>
            <param name="charCode">Character to process</param>
            <returns>True if the character was processed as a mnemonic of the control.</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraLabel.ResetInnerBorderPadding">
            <summary>
            Resets the <see cref="P:Infragistics.Win.Misc.UltraLabel.InnerBorderPadding"/> property to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraLabel.ShouldSerializeInnerBorderPadding">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.Misc.UltraLabel.InnerBorderPadding"/> property should be serialized.
            </summary>
            <returns>True if the <see cref="P:Infragistics.Win.Misc.UltraLabel.InnerBorderPadding"/> property value differs from the default value</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraLabel.CalculatePreferredSize">
            <summary>
            Invoked when the preferred size for the control should be calculated
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.ControlUIElement">
            <summary>
            Returns the main UIElement for the control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.BorderStyleInner">
            <summary>
            Gets/sets the style of border displayed for the inner border
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.BorderStyleInnerResolved">
            <summary>
            Returns the resolved border style for the inner border
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.BorderStyleOuter">
            <summary>
            Gets/sets the style of border displayed for the outer border
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.BorderStyleOuterResolved">
            <summary>
            Returns the resolved border style for the outer border
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.InnerBorderPadding">
            <summary>
            Gets/sets the amount of space between the inner and outer borders.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.TabStop">
            <summary>
            Determines whether the control will receive focus when tabbing through the controls.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.DefaultImeMode">
            <summary>
            Overriden. Determines the default ImeMode for the control.
            </summary>
            <remarks>
            <p class="body">Since the <b>UltraLabel</b> control does not receive focus and does not use the key messages, the default ImeMode is disabled.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.ImeMode">
            <summary>
            Determines the ImeMode for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.About">
            <summary>
            Displays the About dialog for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabel.Infragistics#Shared#IUltraLicensedComponent#License">
            <summary>
            Return the license we cached inside the constructor
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.UltraLabelControlUIElement">
            <summary>
            Main element for the <see cref="T:Infragistics.Win.Misc.UltraLabel"/> control
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraLabelControlUIElement.#ctor(Infragistics.Win.Misc.UltraLabel)">
            <summary>
            Initializes a new <b>UltraLabelControlUIElement</b>
            </summary>
            <param name="label">UltraLabel control owning the uielement</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraLabelControlUIElement.PositionChildElements">
            <summary>
            Handles the creation and positioning of the child elements
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraLabelControlUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the appearance information for the uielement
            </summary>
            <param name="appearance">Appearance structure to update</param>
            <param name="requestedProps">Appearance properties to resolve</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraLabelControlUIElement.DrawBorders(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Invoked when the borders for the control are to be rendered.
            </summary>
            <param name="drawParams">Draw parameters</param>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabelControlUIElement.Label">
            <summary>
            Returns the owning label control
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabelControlUIElement.ImageAndTextElement">
            <summary>
            Returns the contained UIElement that renders the image and text.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabelControlUIElement.RectInsideBorders">
            <summary>
            Returns the rectangle representing the area within the borders of the element
            </summary>
            <returns>Rectangle representing the area within the borders of the element</returns>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraLabelControlUIElement.BorderStyle">
            <summary>
            Returns the outer border style for the element.
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.UltraPopupControlContainer">
            <summary>
            Component for displaying a control in a popup window.
            </summary>
            <remarks>
            <p class="body">The <b>UltraPopupControlContainer</b> is a component that can be used to display any 
            <see cref="T:System.Windows.Forms.Control"/> derived class in a separate popup window. The <see cref="P:Infragistics.Win.Misc.UltraPopupControlContainer.PopupControl"/> 
            property is used to indicate which control should be displayed in the popup window.</p>
            <p class="body">The <see cref="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show"/> method can be used to display the popup window. There are several overloads 
            of the method so that the position of the popup can be controlled. The <see cref="M:Infragistics.Win.Misc.UltraPopupControlContainer.Close"/> method may be 
            used to hide the popup window.</p>
            <p class="body">The <see cref="M:Infragistics.Win.Misc.UltraPopupControlContainer.FromControl(System.Windows.Forms.Control)"/> member is a static method that may be used to obtain a reference to 
            the UltraPopupControlContainer that is currently displaying the specified control.</p>
            <p class="body">The class exposes several events to provide a notification when the popup window is opening (<see cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opening"/> and 
            <see cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opened"/>) and closed (<see cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Closed"/>).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.Misc.UltraPopupControlContainer"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show">
            <summary>
            Used to display the popup window.
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show(System.Drawing.Point)">
            <summary>
            Used to display the popup window at the specified location.
            </summary>
            <param name="location">Location of the popup window in screen coordinates</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show(System.Windows.Forms.Control)">
            <summary>
            Used to display the popup window with the specified owner control.
            </summary>
            <param name="owner">Owning control</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Used to display the popup window at the specified location with the specified owner control.
            </summary>
            <param name="owner">Owning control</param>
            <param name="location">Location of the popup window in screen coordinates</param>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.FromControl(System.Windows.Forms.Control)">
            <summary>
            Returns a dropped down <see cref="T:Infragistics.Win.Misc.UltraPopupControlContainer"/> that contains the specified control.
            </summary>
            <remarks>
            <p class="body">The <b>FromControl</b> method will return the <see cref="T:Infragistics.Win.Misc.UltraPopupControlContainer"/> instance that is currently 
            displaying the specified control or an ancestor of the specified control.</p>
            <p class="note"><b>Note</b> The popup window must be displayed or the associated UltraPopupControlContainer will not be available from 
            this method.</p>
            </remarks>
            <param name="control">Control to evaluate. May be the control dropped down from the button or a child of that control.</param>
            <returns>The <b>UltraPopupControlContainer</b> displaying the specified control in a dropdown window or null if the control is not contained in a dropdown from an <b>UltraPopupControlContainer</b></returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opening"/> event before the dropdown is displayed.
            </summary>
            <param name="e">Event arguments</param>
            <seealso cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opening"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.OnOpened(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opened"/> event before the dropdown is displayed.
            </summary>
            <param name="e">Event arguments</param>
            <seealso cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opened"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.OnClosed(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Closed"/> event when the dropdown has been closed.
            </summary>
            <param name="e">Event arguments</param>
            <seealso cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Closed"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.Close">
            <summary>
            Used to close up the popup window.
            </summary>
            <remarks>
            <p class="body">If the popup window is displayed (see <see cref="P:Infragistics.Win.Misc.UltraPopupControlContainer.IsDisplayed"/>), the 
            popup window may be closed using the <b>Close</b> method. When the popup window 
            is closed, the <see cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Closed"/> event will be raised.</p>
            </remarks>
            <see cref="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show"/>
            <see cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Closed"/>
            <see cref="P:Infragistics.Win.Misc.UltraPopupControlContainer.IsDisplayed"/>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show(Infragistics.Win.PopupInfo)">
            <summary>
            Used to display the popup window with the specified position information.
            </summary>
            <remarks>
            <p class="body">The <b>Show</b> method is used to display the popup window. The <paramref name="info"/> is 
            used to provide position and owner information for the popup window.</p>
            </remarks>
            <param name="info">Provides information about the location of the popup</param>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraPopupControlContainer.PopupControl">
            <summary>
            Returns or sets the control that will be displayed in the popup.
            </summary>
            <remarks>
            <p class="body">The <b>PopupControl</b> is the control that will be displayed in the popup 
            window when the <see cref="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show"/> method is invoked.</p>
            <p class="note"><b>Note</b> Attempting to set the property while the popup window is displayed 
            (see <see cref="P:Infragistics.Win.Misc.UltraPopupControlContainer.IsDisplayed"/>) will result in an exception.</p>
            </remarks>
            <see cref="M:Infragistics.Win.Misc.UltraPopupControlContainer.FromControl(System.Windows.Forms.Control)"/>
            <see cref="P:Infragistics.Win.Misc.UltraPopupControlContainer.IsDisplayed"/>
            <see cref="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show"/>
        </member>
        <member name="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opening">
            <summary>
            Invoked before the dropdown is displayed
            </summary>
            <remarks>
            <p class="body">The <b>Opening</b> event is raised when the <see cref="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show"/> method is invoked but before the 
            dropdown window is displayed. This event can be used to initialize the <see cref="P:Infragistics.Win.Misc.UltraPopupControlContainer.PopupControl"/> or adjust the 
            size of the control, since the size of the control will control the size of the popup window.</p>
            <p class="body">The event may be cancelled by setting the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> property to true. 
            If the event is not cancelled and the <b>PopupControl</b> is specified, the popup window will be 
            displayed and the <see cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opened"/> event will be invoked.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opened"/>
            <seealso cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Closed"/>
        </member>
        <member name="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opened">
            <summary>
            Invoked after the dropdown is displayed
            </summary>
            <remarks>
            <p class="body">The <b>Opening</b> event is raised when the <see cref="M:Infragistics.Win.Misc.UltraPopupControlContainer.Show"/> method is invoked but before the 
            dropdown window is displayed. This event can be used to initialize the <see cref="P:Infragistics.Win.Misc.UltraPopupControlContainer.PopupControl"/> or adjust the 
            size of the control, since the size of the control will control the size of the popup window.</p>
            <p class="body">The event may be cancelled by setting the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> property to true. 
            If the event is not cancelled and the <b>PopupControl</b> is specified, the popup window will be 
            displayed and the <see cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opened"/> event will be invoked.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opening"/>
            <seealso cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Closed"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraPopupControlContainer.About">
            <summary>
            Displays the About dialog for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraPopupControlContainer.Infragistics#Shared#IUltraLicensedComponent#License">
            <summary>
            Return the license we cached inside the constructor
            </summary>
        </member>
        <member name="E:Infragistics.Win.Misc.UltraPopupControlContainer.Closed">
            <summary>
            Invoked when the popup window has been closed.
            </summary>
            <remarks>
            <p class="body">The <b>Closed</b> event is raised when the popup window has been closed, whether it is 
            the result of clicking elsewhere on the screen or when closed via the <see cref="M:Infragistics.Win.Misc.UltraPopupControlContainer.Close"/> method.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opening"/>
            <seealso cref="E:Infragistics.Win.Misc.UltraPopupControlContainer.Opened"/>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraPopupControlContainer.IsDisplayed">
            <summary>
            Indicates if the popup window is currently being displayed.
            </summary>
            <remarks>
            <p class="body">The <b>IsDisplayed</b> property will return true while the 
            popup window is displayed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.Misc.UltraPopupControlContainer.SourceControl">
            <summary>
            Returns the Control that displayed the popup window.
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.Design.UltraPopupControlContainerDesigner">
            <summary>
            Designer for the <see cref="T:Infragistics.Win.Misc.UltraPopupControlContainer"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.Misc.Design.UltraPopupControlContainerDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Prepares the designer to view, edit, and design the specified component.
            </summary>
            <param name="component">Component to be managed by the designer</param>
        </member>
        <member name="M:Infragistics.Win.Misc.Design.UltraPopupControlContainerDesigner.Dispose(System.Boolean)">
            <summary>
            Disposes of resources used by the designer
            </summary>
            <param name="disposing">True if managed resources should be released.</param>
        </member>
        <member name="T:Infragistics.Win.Misc.SplitButtonDisplayStyle">
            <summary>
            Enumeration of display styles for the <see cref="T:Infragistics.Win.Misc.UltraDropDownButton"/> control
            </summary>
            <seealso cref="P:Infragistics.Win.Misc.UltraDropDownButton.Style"/>
        </member>
        <member name="F:Infragistics.Win.Misc.SplitButtonDisplayStyle.SplitButton">
            <summary>
            Displays a main button element and a separate dropdown button
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.SplitButtonDisplayStyle.DropDownButtonOnly">
            <summary>
            Only the dropdown button is displayed
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.ControlBasePropertyIds">
            <summary>
            Enumeration of common property id's
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.Appearance">
            <summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.Appearance"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.HotTrackAppearance">
            <summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.HotTrackAppearance"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.Appearances">
            <summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.Appearances"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.HotTracking">
            <summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.HotTracking"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.WrapText">
            <summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.WrapText"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.AutoSize">
            <summary>
            <see cref="P:Infragistics.Win.Misc.AutoSizeControlBase.AutoSize"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.ImageSize">
            <summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.ImageSize"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.ImageList">
            <summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.ImageList"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.ImageTransparentColor">
            <summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.ImageTransparentColor"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.Padding">
            <summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.Padding"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ControlBasePropertyIds.UseMnemonic">
            <summary>
            <see cref="P:Infragistics.Win.Misc.ControlBase.UseMnemonic"/> property
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.ButtonPropertyIds">
            <summary>
            Enumeration of <see cref="T:Infragistics.Win.Misc.UltraButtonBase"/> property id's
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ButtonPropertyIds.DialogResult">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraButtonBase.DialogResult"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ButtonPropertyIds.AutoRepeat">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeat"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ButtonPropertyIds.AutoRepeatDelay">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeatDelay"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ButtonPropertyIds.AutoRepeatInterval">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraButton.AutoRepeatInterval"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ButtonPropertyIds.ButtonStyle">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraButtonBase.ButtonStyle"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ButtonPropertyIds.PressedAppearance">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraButtonBase.PressedAppearance"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ButtonPropertyIds.AcceptsFocus">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraButtonBase.AcceptsFocus"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ButtonPropertyIds.ShowFocusRect">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraButtonBase.ShowFocusRect"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ButtonPropertyIds.ShowOutline">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraButtonBase.ShowOutline"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.ButtonPropertyIds.ShapeImage">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraButton.ShapeImage"/> property
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.LabelPropertyIds">
            <summary>
            Enumeration of <see cref="T:Infragistics.Win.Misc.UltraLabel"/> property id's
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.LabelPropertyIds.BorderStyleInner">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraLabel.BorderStyleInner"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.LabelPropertyIds.BorderStyleOuter">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraLabel.BorderStyleOuter"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.LabelPropertyIds.InnerBorderPadding">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraLabel.InnerBorderPadding"/> property
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.DropDownButtonPropertyIds">
            <summary>
            Enumeration of property ids for the <see cref="T:Infragistics.Win.Misc.UltraDropDownButton"/> control
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.DropDownButtonPropertyIds.Style">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraDropDownButton.Style"/>
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.DropDownButtonPropertyIds.PopupItemProvider">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraDropDownButton.PopupItemProvider"/>
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.DropDownButtonPropertyIds.PopupItemKey">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraDropDownButton.PopupItemKey"/>
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.DropDownButtonPropertyIds.PopupItem">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraDropDownButton.PopupItem"/>
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.PopupControlContainerPropertyIds">
            <summary>
            Enumeration of property ids for the <see cref="T:Infragistics.Win.Misc.UltraPopupControlContainer"/>
            </summary>
        </member>
        <member name="F:Infragistics.Win.Misc.PopupControlContainerPropertyIds.PopupControl">
            <summary>
            <see cref="P:Infragistics.Win.Misc.UltraPopupControlContainer.PopupControl"/> property
            </summary>
        </member>
        <member name="T:Infragistics.Win.Misc.Resources">
            <summary>
            Exposes a <see cref="T:Infragistics.Shared.ResourceCustomizer"/> instance for this assembly. 
            </summary>
            <seealso cref="P:Infragistics.Win.Misc.Resources.Customizer"/> 
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="P:Infragistics.Win.Misc.Resources.Customizer">
            <summary>
            Returns the <see cref="T:Infragistics.Shared.ResourceCustomizer"/> for this assembly.
            </summary>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="M:Infragistics.Shared.LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name
            </summary>
            <param name="value">Name of the category to retreive</param>
            <returns>The localized string value</returns>
        </member>
        <member name="M:Infragistics.Win.Misc.UltraLicenseAttribute.GetLicensedWithProducts">
            <summary>
            Return the list of products that this control can be licensed with
            </summary>
        </member>
    </members>
</doc>
